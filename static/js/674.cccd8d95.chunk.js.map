{"version":3,"file":"static/js/674.cccd8d95.chunk.js","mappings":"iKAIe,SAASA,IACnB,MAAOC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,SACtC,OACEC,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAAEC,WAAY,oBAAqBC,WAAY,MAAOC,QAAS,OAAQC,SAAU,QAASC,OAAQ,QAASC,SAAA,EACrHC,EAAAA,EAAAA,KAAA,MAAIP,MAAO,CAAEQ,MAAO,WAAYF,SAAC,uBAEjCP,EAAAA,EAAAA,MAAA,WAASC,MAAO,CAAES,aAAc,QAASH,SAAA,EACvCC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,0BACJP,EAAAA,EAAAA,MAAA,KAAAO,SAAA,CAAG,QACGC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,gBAAoB,iLAKpCP,EAAAA,EAAAA,MAAA,WAASC,MAAO,CAAES,aAAc,QAASH,SAAA,EACvCC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,mBACJC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,sCACHC,EAAAA,EAAAA,KAAA,OAAKP,MAAO,CAAEU,WAAY,UAAWP,QAAS,OAAQQ,aAAc,OAAQL,SAAA,8kBAuB9EP,EAAAA,EAAAA,MAAA,WAASC,MAAO,CAAES,aAAc,QAASH,SAAA,EACvCC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,gBACJP,EAAAA,EAAAA,MAAA,MAAAO,SAAA,EACEP,EAAAA,EAAAA,MAAA,MAAAO,SAAA,CAAI,QAAIC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,kBAAoB,mCAClCP,EAAAA,EAAAA,MAAA,MAAAO,SAAA,CAAI,iCAA6BC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,qBAAuB,yBAC9DP,EAAAA,EAAAA,MAAA,MAAAO,SAAA,CAAI,6CAAyCC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,eAAiB,QACpEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,sFAIRP,EAAAA,EAAAA,MAAA,WAASC,MAAO,CAAEY,UAAW,QAASN,SAAA,EACpCC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,aACJP,EAAAA,EAAAA,MAAA,KAAAO,SAAA,CAAG,QACGC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,gBAAoB,uLAM1C,C","sources":["pages/05-context-api/ContextApiComponent.tsx"],"sourcesContent":["import React, { createContext, useState } from 'react'\nconst ThemeContext = createContext<{ theme: string; toggleTheme: () => void } | undefined>(undefined);\n\n\nexport default function ContextApiComponent() {\n     const [theme, setTheme] = useState('light');\n  return (\n    <div style={{ fontFamily: 'Arial, sans-serif', lineHeight: '1.6', padding: '20px', maxWidth: '800px', margin: 'auto' }}>\n      <h1 style={{ color: '#4A90E2' }}>React Context API</h1>\n\n      <section style={{ marginBottom: '20px' }}>\n        <h2>What is Context API?</h2>\n        <p>\n          The <strong>Context API</strong> in React allows you to share data between components without passing props manually at every level.\n          It is useful for global state like themes, user data, or settings.\n        </p>\n      </section>\n\n      <section style={{ marginBottom: '20px' }}>\n        <h2>Basic Example</h2>\n        <p>Creating a simple theme context:</p>\n        <pre style={{ background: '#f5f5f5', padding: '10px', borderRadius: '5px' }}>\n{`import React, { createContext, useContext, useState } from 'react';\n\nconst ThemeContext = createContext();\n\nfunction ThemeProvider({ children }) {\n  const [theme, setTheme] = useState('light');\n  const toggleTheme = () => setTheme(prev => (prev === 'light' ? 'dark' : 'light'));\n\n  return (\n    <ThemeContext.Provider value={{ theme, toggleTheme }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n}\n\nfunction ThemedButton() {\n  const context = useContext(ThemeContext);\n  return <button onClick={context.toggleTheme}>Current theme: {context.theme}</button>;\n}`}\n        </pre>\n      </section>\n\n      <section style={{ marginBottom: '20px' }}>\n        <h2>Key Points</h2>\n        <ul>\n          <li>Use <code>createContext</code> to create a context object.</li>\n          <li>Wrap the component tree with <code>Context.Provider</code> and pass a value.</li>\n          <li>Access context in child components using <code>useContext</code>.</li>\n          <li>Useful for sharing global state like theme, language, authentication, etc.</li>\n        </ul>\n      </section>\n\n      <section style={{ marginTop: '20px' }}>\n        <h2>Summary</h2>\n        <p>\n          The <strong>Context API</strong> provides a way to pass data through the component tree without\n          prop drilling. Combined with hooks, it makes managing global state in functional components straightforward.\n        </p>\n      </section>\n    </div>\n  );\n}\n"],"names":["ContextApiComponent","theme","setTheme","useState","_jsxs","style","fontFamily","lineHeight","padding","maxWidth","margin","children","_jsx","color","marginBottom","background","borderRadius","marginTop"],"sourceRoot":""}