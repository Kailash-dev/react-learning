"use strict";(self.webpackChunkreact_learning=self.webpackChunkreact_learning||[]).push([[151],{151:(e,n,s)=>{s.r(n),s.d(n,{default:()=>i});var o=s(43),r=s(579);function i(){const[e,n]=(0,o.useState)(0),[s,i]=(0,o.useState)(0),t=(0,o.useCallback)(e=>{console.log("Computing...");let n=0;for(let s=0;s<1e6;s++)n+=e;return n},[]);(0,o.useMemo)(()=>t(e),[e,t]);return(0,r.jsxs)("div",{style:{fontFamily:"Arial, sans-serif",lineHeight:"1.6",padding:"20px",maxWidth:"800px",margin:"auto"},children:[(0,r.jsx)("h1",{style:{color:"#4A90E2"},children:"React Memoization"}),(0,r.jsxs)("section",{style:{marginBottom:"20px"},children:[(0,r.jsx)("h2",{children:"What is Memoization?"}),(0,r.jsx)("p",{children:"Memoization in React is a performance optimization technique. It prevents unnecessary re-rendering of components or re-computation of values."})]}),(0,r.jsxs)("section",{style:{marginBottom:"20px"},children:[(0,r.jsx)("h2",{children:"React.memo"}),(0,r.jsxs)("p",{children:[(0,r.jsx)("strong",{children:"React.memo"})," wraps a component and only re-renders it if its props change."]}),(0,r.jsx)("p",{children:"Example:"}),(0,r.jsx)("pre",{style:{background:"#f5f5f5",padding:"10px",borderRadius:"5px"},children:"const MyComponent = React.memo(({ value }) => {\n  return <p>{value}</p>;\n});"})]}),(0,r.jsxs)("section",{style:{marginBottom:"20px"},children:[(0,r.jsx)("h2",{children:"useMemo"}),(0,r.jsxs)("p",{children:[(0,r.jsx)("strong",{children:"useMemo"})," memoizes a computed value and recomputes it only when dependencies change."]}),(0,r.jsx)("p",{children:"Example:"}),(0,r.jsx)("pre",{style:{background:"#f5f5f5",padding:"10px",borderRadius:"5px"},children:"const memoizedValue = useMemo(() => expensiveComputation(count), [count]);"})]}),(0,r.jsxs)("section",{style:{marginBottom:"20px"},children:[(0,r.jsx)("h2",{children:"useCallback"}),(0,r.jsxs)("p",{children:[(0,r.jsx)("strong",{children:"useCallback"})," memoizes a function so that it is not recreated on every render."]}),(0,r.jsx)("p",{children:"Example:"}),(0,r.jsx)("pre",{style:{background:"#f5f5f5",padding:"10px",borderRadius:"5px"},children:"const memoizedCallback = useCallback(() => {\n  doSomething(count);\n}, [count]);"})]}),(0,r.jsxs)("section",{style:{marginTop:"20px"},children:[(0,r.jsx)("h2",{children:"Summary"}),(0,r.jsxs)("p",{children:["Memoization improves performance by avoiding unnecessary re-renders or recalculations. Use ",(0,r.jsx)("code",{children:"React.memo"})," for components, ",(0,r.jsx)("code",{children:"useMemo"})," for expensive computations, and ",(0,r.jsx)("code",{children:"useCallback"})," for functions."]})]})]})}}}]);
//# sourceMappingURL=151.52822f0e.chunk.js.map