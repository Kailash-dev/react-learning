{"version":3,"file":"static/js/804.c772275d.chunk.js","mappings":"+JAEe,SAASA,IACtB,OACEC,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAAEC,WAAY,oBAAqBC,WAAY,MAAOC,QAAS,OAAQC,SAAU,QAASC,OAAQ,QAASC,SAAA,EACrHC,EAAAA,EAAAA,KAAA,MAAIP,MAAO,CAAEQ,MAAO,WAAYF,SAAC,mCAEjCP,EAAAA,EAAAA,MAAA,WAASC,MAAO,CAAES,aAAc,QAASH,SAAA,EACvCC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,wBACJP,EAAAA,EAAAA,MAAA,KAAAO,SAAA,EACEC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,cAAkB,yKAK9BP,EAAAA,EAAAA,MAAA,WAASC,MAAO,CAAES,aAAc,QAASH,SAAA,EACvCC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,mBACJP,EAAAA,EAAAA,MAAA,KAAAO,SAAA,CAAG,UAAMC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,cAAgB,gEAC/BC,EAAAA,EAAAA,KAAA,OAAKP,MAAO,CAAEU,WAAY,UAAWP,QAAS,OAAQQ,aAAc,OAAQL,SAAA,iYAoB9EP,EAAAA,EAAAA,MAAA,WAASC,MAAO,CAAES,aAAc,QAASH,SAAA,EACvCC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,gBACJP,EAAAA,EAAAA,MAAA,MAAAO,SAAA,EACEP,EAAAA,EAAAA,MAAA,MAAAO,SAAA,EAAIC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,cAAkB,yDAC9BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,mGACJP,EAAAA,EAAAA,MAAA,MAAAO,SAAA,CAAI,+BAA2BC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,OAAU,4CAAuCC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,sBAAwB,QACpHC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,4FAIRP,EAAAA,EAAAA,MAAA,WAASC,MAAO,CAAEY,UAAW,QAASN,SAAA,EACpCC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,0BACJC,EAAAA,EAAAA,KAAA,OAAKP,MAAO,CAAEU,WAAY,UAAWP,QAAS,OAAQQ,aAAc,OAAQL,SAAA,2TAkB9EP,EAAAA,EAAAA,MAAA,WAASC,MAAO,CAAEY,UAAW,QAASN,SAAA,EACpCC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,aACJP,EAAAA,EAAAA,MAAA,KAAAO,SAAA,EACEC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,cAAkB,qCAAiCC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,sBAAyB,KAC1FC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,uBAA0B,UAAKC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,yBAA2B,4FAMhF,C","sources":["pages/04-effect-hooks/EffectHookComponent.tsx"],"sourcesContent":["import React from 'react'\n\nexport default function EffectHookComponent() {\n  return (\n    <div style={{ fontFamily: 'Arial, sans-serif', lineHeight: '1.6', padding: '20px', maxWidth: '800px', margin: 'auto' }}>\n      <h1 style={{ color: '#4A90E2' }}>React Effect Hook (useEffect)</h1>\n\n      <section style={{ marginBottom: '20px' }}>\n        <h2>What is useEffect?</h2>\n        <p>\n          <strong>useEffect</strong> is a Hook that lets you perform side effects in functional components.\n          Side effects include data fetching, subscriptions, manually changing the DOM, and more.\n        </p>\n      </section>\n\n      <section style={{ marginBottom: '20px' }}>\n        <h2>Basic Example</h2>\n        <p>Using <code>useEffect</code> to update the document title whenever the count changes:</p>\n        <pre style={{ background: '#f5f5f5', padding: '10px', borderRadius: '5px' }}>\n{`import React, { useState, useEffect } from 'react';\n\nfunction Counter() {\n  const [count, setCount] = useState(0);\n\n  useEffect(() => {\n    document.title = \\`Count: \\${count}\\`;\n  }, [count]); // Runs only when 'count' changes\n\n  return (\n    <div>\n      <p>Count: {count}</p>\n      <button onClick={() => setCount(count + 1)}>Increment</button>\n    </div>\n  );\n}`}\n        </pre>\n      </section>\n\n      <section style={{ marginBottom: '20px' }}>\n        <h2>Key Points</h2>\n        <ul>\n          <li><strong>useEffect</strong> runs after the render is committed to the screen.</li>\n          <li>The second argument is an array of dependencies. The effect runs when any dependency changes.</li>\n          <li>If you pass an empty array <code>[]</code>, the effect runs only once, similar to <code>componentDidMount</code>.</li>\n          <li>Return a cleanup function from the effect to handle unmounting or cleanup tasks.</li>\n        </ul>\n      </section>\n\n      <section style={{ marginTop: '20px' }}>\n        <h2>Example with Cleanup</h2>\n        <pre style={{ background: '#f5f5f5', padding: '10px', borderRadius: '5px' }}>\n{`function Timer() {\n  const [seconds, setSeconds] = useState(0);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setSeconds(s => s + 1);\n    }, 1000);\n\n    // Cleanup function\n    return () => clearInterval(interval);\n  }, []);\n\n  return <p>Seconds elapsed: {seconds}</p>;\n}`}\n        </pre>\n      </section>\n\n      <section style={{ marginTop: '20px' }}>\n        <h2>Summary</h2>\n        <p>\n          <strong>useEffect</strong> replaces lifecycle methods like <code>componentDidMount</code>, \n          <code>componentDidUpdate</code>, and <code>componentWillUnmount</code> in functional components. \n          It is the key tool for handling side effects in React.\n        </p>\n      </section>\n    </div>\n  );\n}\n"],"names":["EffectHookComponent","_jsxs","style","fontFamily","lineHeight","padding","maxWidth","margin","children","_jsx","color","marginBottom","background","borderRadius","marginTop"],"sourceRoot":""}