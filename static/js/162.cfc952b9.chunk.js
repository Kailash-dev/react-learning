"use strict";(self.webpackChunkreact_learning=self.webpackChunkreact_learning||[]).push([[162],{162:(n,e,o)=>{o.r(e),o.d(e,{default:()=>s});var t=o(555),i=(o(43),o(579));const r=function(n){const e=e=>(console.log("Rendering component with props:",e),(0,i.jsx)(n,(0,t.A)({},e)));return e.displayName="withLogger(".concat(n.displayName||n.name||"Component",")"),e}(n=>{let{label:e}=n;return(0,i.jsx)("button",{children:e})});function s(){return(0,i.jsxs)("div",{style:{fontFamily:"Arial, sans-serif",lineHeight:"1.6",padding:"20px",maxWidth:"800px",margin:"auto"},children:[(0,i.jsx)("h1",{style:{color:"#4A90E2"},children:"Higher-Order Components (HOC)"}),(0,i.jsxs)("section",{style:{marginBottom:"20px"},children:[(0,i.jsx)("h2",{children:"What is a Higher-Order Component?"}),(0,i.jsx)("p",{children:"A Higher-Order Component is a function that takes a component and returns a new component. HOCs are used to add reusable behavior to components without modifying their original code."})]}),(0,i.jsxs)("section",{style:{marginBottom:"20px"},children:[(0,i.jsx)("h2",{children:"Basic Example"}),(0,i.jsx)("pre",{style:{background:"#f5f5f5",padding:"10px",borderRadius:"5px"},children:"// HOC definition\nfunction withLogger(WrappedComponent) {\n  return (props) => {\n    console.log('Rendering component with props:', props);\n    return <WrappedComponent {...props} />;\n  };\n}\n\n// Usage\nconst ButtonWithLogger = withLogger(Button);"}),(0,i.jsxs)("p",{children:["Now, ",(0,i.jsx)("code",{children:"ButtonWithLogger"})," logs props to the console whenever it renders, without changing the original ",(0,i.jsx)("code",{children:"Button"})," component."]})]}),(0,i.jsxs)("section",{style:{marginBottom:"20px"},children:[(0,i.jsx)("h2",{children:"Key Points"}),(0,i.jsxs)("ul",{children:[(0,i.jsx)("li",{children:"HOCs are functions that wrap components and return enhanced components."}),(0,i.jsx)("li",{children:"They allow code reuse, logic abstraction, and cross-cutting concerns."}),(0,i.jsx)("li",{children:"Common use cases: logging, authentication, theming, and data fetching."}),(0,i.jsx)("li",{children:"HOCs should not mutate the original component; always return a new one."})]})]}),(0,i.jsxs)("section",{style:{marginTop:"20px"},children:[(0,i.jsx)("h2",{children:"Summary"}),(0,i.jsx)("p",{children:"Higher-Order Components are a powerful React pattern for reusing logic across components. They enhance components without modifying their original implementation."})]}),(0,i.jsxs)("section",{style:{marginTop:"20px"},children:[(0,i.jsx)("h2",{children:"Try it Out"}),(0,i.jsx)(r,{label:"Click Me"})]})]})}}}]);
//# sourceMappingURL=162.cfc952b9.chunk.js.map