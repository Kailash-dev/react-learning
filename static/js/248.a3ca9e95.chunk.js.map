{"version":3,"file":"static/js/248.a3ca9e95.chunk.js","mappings":"+JAmFe,SAASA,IACtB,OACEC,EAAAA,EAAAA,KAAA,SAIJ,C","sources":["pages/20-profiler/ProfileComponent.tsx"],"sourcesContent":["// import React, { useState, Profiler, ProfilerOnRenderCallback } from 'react';\n\n// export default function ProfileComponent() {\n//   const [count, setCount] = useState(0);\n\n//   // Profiler callback with 8 parameters (React 18)\n//   const onRenderCallback: ProfilerOnRenderCallback = (\n//     id,\n//     phase,\n//     actualDuration,\n//     baseDuration,\n//     startTime,\n//     commitTime,\n//     interactions,\n//     layoutEffectsDuration // optional 8th param\n//   ) => {\n//     console.log(`Profiler [${id}] (${phase})`);\n//     console.log(`Actual duration: ${actualDuration}`);\n//     console.log(`Base duration: ${baseDuration}`);\n//     console.log(`Start time: ${startTime}`);\n//     console.log(`Commit time: ${commitTime}`);\n//     console.log('Interactions:', interactions);\n//     if (layoutEffectsDuration !== undefined) {\n//       console.log('Layout effects duration:', layoutEffectsDuration);\n//     }\n//   };\n\n//   return (\n//     <div style={{ fontFamily: 'Arial, sans-serif', lineHeight: 1.6, padding: 20, maxWidth: 800, margin: 'auto' }}>\n//       <h1 style={{ color: '#4A90E2' }}>React Profiler API</h1>\n\n//       <section style={{ marginBottom: 20 }}>\n//         <h2>What is Profiler?</h2>\n//         <p>\n//           The <strong>Profiler</strong> API measures the performance of React components, tracking render durations\n//           and other metrics. It helps identify performance bottlenecks and optimize slow components.\n//         </p>\n//       </section>\n\n//       <section style={{ marginBottom: 20 }}>\n//         <h2>Basic Example</h2>\n//         <pre style={{ background: '#f5f5f5', padding: 10, borderRadius: 5 }}>\n// {`<Profiler id=\"Counter\" onRender={onRenderCallback}>\n//   <Counter />\n// </Profiler>`}\n//         </pre>\n//         <p>The <code>onRender</code> callback logs render performance details to the console.</p>\n//       </section>\n\n//       <section style={{ marginBottom: 20 }}>\n//         <h2>Try it Out</h2>\n//         <Profiler id=\"Counter\" onRender={onRenderCallback}>\n//           <div style={{ marginTop: 10 }}>\n//             <p>Count: {count}</p>\n//             <button onClick={() => setCount(count + 1)}>Increment</button>\n//           </div>\n//         </Profiler>\n//       </section>\n\n//       <section style={{ marginTop: 20 }}>\n//         <h2>Key Points</h2>\n//         <ul>\n//           <li>Profiler can wrap any component to measure its rendering performance.</li>\n//           <li>Callback provides metrics like <code>actualDuration</code> and <code>commitTime</code>.</li>\n//           <li>Helps identify performance bottlenecks in large applications.</li>\n//         </ul>\n//       </section>\n\n//       <section style={{ marginTop: 20 }}>\n//         <h2>Summary</h2>\n//         <p>\n//           React's Profiler API is a built-in performance monitoring tool that helps developers optimize render times\n//           and improve app performance.\n//         </p>\n//       </section>\n//     </div>\n//   );\n// }\n\n\n\nimport React from 'react'\n\nexport default function ProfileComponent() {\n  return (\n    <div>\n      \n    </div>\n  )\n}\n"],"names":["ProfileComponent","_jsx"],"sourceRoot":""}