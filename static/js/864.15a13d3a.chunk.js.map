{"version":3,"file":"static/js/864.15a13d3a.chunk.js","mappings":"iKAiBe,SAASA,IACrB,MAAMC,EAfT,WACE,MAAOA,EAAOC,IAAYC,EAAAA,EAAAA,UAASC,OAAOC,YAU1C,OARAC,EAAAA,EAAAA,WAAU,KACR,MAAMC,EAAeA,IAAML,EAASE,OAAOC,YAI3C,OAHAD,OAAOI,iBAAiB,SAAUD,GAG3B,IAAMH,OAAOK,oBAAoB,SAAUF,IACjD,IAEIN,CACT,CAGiBS,GAEf,OACEC,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAAEC,WAAY,oBAAqBC,WAAY,MAAOC,QAAS,OAAQC,SAAU,QAASC,OAAQ,QAASC,SAAA,EACrHC,EAAAA,EAAAA,KAAA,MAAIP,MAAO,CAAEQ,MAAO,WAAYF,SAAC,2BAEjCP,EAAAA,EAAAA,MAAA,WAASC,MAAO,CAAES,aAAc,QAASH,SAAA,EACvCC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,4BACJP,EAAAA,EAAAA,MAAA,KAAAO,SAAA,CAAG,MACCC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,gBAAoB,qDAAiDC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,QAAU,+GAKnGP,EAAAA,EAAAA,MAAA,WAASC,MAAO,CAAES,aAAc,QAASH,SAAA,EACvCC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,mBACJC,EAAAA,EAAAA,KAAA,OAAKP,MAAO,CAAEU,WAAY,UAAWP,QAAS,OAAQQ,aAAc,OAAQL,SAAA,+UAe9EP,EAAAA,EAAAA,MAAA,WAASC,MAAO,CAAES,aAAc,QAASH,SAAA,EACvCC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,2BACJP,EAAAA,EAAAA,MAAA,KAAAO,SAAA,CAAG,oBACeC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,mBAAqB,wCAE7CC,EAAAA,EAAAA,KAAA,OAAKP,MAAO,CAAEU,WAAY,UAAWP,QAAS,OAAQQ,aAAc,OAAQL,SAAA,8GAO5EP,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAAEY,UAAW,OAAQT,QAAS,OAAQU,gBAAiB,UAAWF,aAAc,OAAQL,SAAA,CAAC,iBACpFjB,EAAM,YAIzBU,EAAAA,EAAAA,MAAA,WAASC,MAAO,CAAEY,UAAW,QAASN,SAAA,EACpCC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,gBACJP,EAAAA,EAAAA,MAAA,MAAAO,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,0DACJP,EAAAA,EAAAA,MAAA,MAAAO,SAAA,CAAI,2BAAuBC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,QAAU,QAC3CC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,sEACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,yDAIRP,EAAAA,EAAAA,MAAA,WAASC,MAAO,CAAEY,UAAW,QAASN,SAAA,EACpCC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,aACJC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,iJAMX,C","sources":["pages/19-hooks-custom/CustomHookComponent.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\n\n// Example of a custom hook\nfunction useWindowWidth() {\n  const [width, setWidth] = useState(window.innerWidth);\n\n  useEffect(() => {\n    const handleResize = () => setWidth(window.innerWidth);\n    window.addEventListener('resize', handleResize);\n\n    // Cleanup\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return width;\n}\n\nexport default function CustomHookComponent() {\n   const width = useWindowWidth();\n\n  return (\n    <div style={{ fontFamily: 'Arial, sans-serif', lineHeight: '1.6', padding: '20px', maxWidth: '800px', margin: 'auto' }}>\n      <h1 style={{ color: '#4A90E2' }}>Custom Hooks in React</h1>\n\n      <section style={{ marginBottom: '20px' }}>\n        <h2>What is a Custom Hook?</h2>\n        <p>\n          A <strong>Custom Hook</strong> is a JavaScript function whose name starts with <code>use</code> and that can call other hooks.\n          It allows you to extract and reuse stateful logic between components.\n        </p>\n      </section>\n\n      <section style={{ marginBottom: '20px' }}>\n        <h2>Basic Example</h2>\n        <pre style={{ background: '#f5f5f5', padding: '10px', borderRadius: '5px' }}>\n{`function useWindowWidth() {\n  const [width, setWidth] = useState(window.innerWidth);\n\n  useEffect(() => {\n    const handleResize = () => setWidth(window.innerWidth);\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return width;\n}`}\n        </pre>\n      </section>\n\n      <section style={{ marginBottom: '20px' }}>\n        <h2>Using the Custom Hook</h2>\n        <p>\n          You can now use <code>useWindowWidth</code> inside any functional component:\n        </p>\n        <pre style={{ background: '#f5f5f5', padding: '10px', borderRadius: '5px' }}>\n{`function MyComponent() {\n  const width = useWindowWidth();\n  return <p>Window width: {width}px</p>;\n}`}\n        </pre>\n\n        <div style={{ marginTop: '10px', padding: '10px', backgroundColor: '#e8f5e9', borderRadius: '6px' }}>\n          Window width: {width}px\n        </div>\n      </section>\n\n      <section style={{ marginTop: '20px' }}>\n        <h2>Key Points</h2>\n        <ul>\n          <li>Custom hooks let you reuse logic between components.</li>\n          <li>They always start with <code>use</code>.</li>\n          <li>Can call other hooks (state, effect, context, etc.) inside them.</li>\n          <li>Keep your components clean and focused on UI.</li>\n        </ul>\n      </section>\n\n      <section style={{ marginTop: '20px' }}>\n        <h2>Summary</h2>\n        <p>\n          Custom hooks are a powerful way to share stateful logic across multiple React components while keeping code organized and maintainable.\n        </p>\n      </section>\n    </div>\n  );\n}\n"],"names":["CustomHookComponent","width","setWidth","useState","window","innerWidth","useEffect","handleResize","addEventListener","removeEventListener","useWindowWidth","_jsxs","style","fontFamily","lineHeight","padding","maxWidth","margin","children","_jsx","color","marginBottom","background","borderRadius","marginTop","backgroundColor"],"sourceRoot":""}