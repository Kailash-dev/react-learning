{"version":3,"file":"static/js/961.48db6c9d.chunk.js","mappings":"0KAEe,SAASA,IACvB,MAAOC,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,CAAEC,KAAM,GAAIC,MAAO,KAErDC,EAAgBC,IACpB,MAAM,KAAEH,EAAI,MAAEI,GAAUD,EAAEE,OAC1BP,EAAYQ,IAAIC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUD,GAAI,IAAE,CAACN,GAAOI,MAQ1C,OACEI,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAAEC,WAAY,oBAAqBC,WAAY,MAAOC,QAAS,OAAQC,SAAU,QAASC,OAAQ,QAASC,SAAA,EACrHC,EAAAA,EAAAA,KAAA,MAAIP,MAAO,CAAEQ,MAAO,WAAYF,SAAC,iBAEjCP,EAAAA,EAAAA,MAAA,WAASC,MAAO,CAAES,aAAc,QAASH,SAAA,EACvCC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,8BACJP,EAAAA,EAAAA,MAAA,KAAAO,SAAA,CAAG,mFAC8EC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,0BAA+B,qEAK1HP,EAAAA,EAAAA,MAAA,WAASC,MAAO,CAAES,aAAc,QAASH,SAAA,EACvCC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,mBACJC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,uDACHC,EAAAA,EAAAA,KAAA,OAAKP,MAAO,CAAEU,WAAY,UAAWP,QAAS,OAAQQ,aAAc,OAAQL,SAAA,qUAe9EP,EAAAA,EAAAA,MAAA,WAASC,MAAO,CAAES,aAAc,QAASH,SAAA,EACvCC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,qBACJP,EAAAA,EAAAA,MAAA,QAAMa,SArCUlB,IACpBA,EAAEmB,iBACFC,MAAM,SAADC,OAAU3B,EAASG,KAAI,aAAAwB,OAAY3B,EAASI,SAmCfQ,MAAO,CAAEgB,QAAS,OAAQC,cAAe,SAAUC,IAAK,QAASZ,SAAA,EAC7FC,EAAAA,EAAAA,KAAA,SACEY,KAAK,OACL5B,KAAK,OACL6B,YAAY,kBACZzB,MAAOP,EAASG,KAChB8B,SAAU5B,EACVO,MAAO,CAAEG,QAAS,MAAOQ,aAAc,MAAOW,OAAQ,qBAExDf,EAAAA,EAAAA,KAAA,SACEY,KAAK,QACL5B,KAAK,QACL6B,YAAY,mBACZzB,MAAOP,EAASI,MAChB6B,SAAU5B,EACVO,MAAO,CAAEG,QAAS,MAAOQ,aAAc,MAAOW,OAAQ,qBAExDf,EAAAA,EAAAA,KAAA,UACEY,KAAK,SACLnB,MAAO,CAAEG,QAAS,OAAQoB,gBAAiB,UAAWf,MAAO,OAAQc,OAAQ,OAAQX,aAAc,MAAOa,OAAQ,WAAYlB,SAC/H,kBAMLP,EAAAA,EAAAA,MAAA,WAASC,MAAO,CAAEyB,UAAW,QAASnB,SAAA,EACpCC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,gBACJP,EAAAA,EAAAA,MAAA,MAAAO,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,6DACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,uFACJP,EAAAA,EAAAA,MAAA,MAAAO,SAAA,CAAI,kCAA8BC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,aAAe,eACvDC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,2EAIRP,EAAAA,EAAAA,MAAA,WAASC,MAAO,CAAEyB,UAAW,QAASnB,SAAA,EACpCC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,aACJC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,sKAOX,C","sources":["pages/07-forms/FormsComponent.tsx"],"sourcesContent":["import React, { useState } from 'react'\n\nexport default function FormsComponent() {\n const [formData, setFormData] = useState({ name: '', email: '' });\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({ ...prev, [name]: value }));\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    alert(`Name: ${formData.name}, Email: ${formData.email}`);\n  };\n\n  return (\n    <div style={{ fontFamily: 'Arial, sans-serif', lineHeight: '1.6', padding: '20px', maxWidth: '800px', margin: 'auto' }}>\n      <h1 style={{ color: '#4A90E2' }}>React Forms</h1>\n\n      <section style={{ marginBottom: '20px' }}>\n        <h2>What are Forms in React?</h2>\n        <p>\n          Forms in React are used to collect user input. React handles form inputs using <strong>controlled components</strong>, \n          meaning the form data is stored in the component's state.\n        </p>\n      </section>\n\n      <section style={{ marginBottom: '20px' }}>\n        <h2>Basic Example</h2>\n        <p>Example of a controlled form with name and email:</p>\n        <pre style={{ background: '#f5f5f5', padding: '10px', borderRadius: '5px' }}>\n{`const [formData, setFormData] = useState({ name: '', email: '' });\n\nconst handleChange = (e) => {\n  const { name, value } = e.target;\n  setFormData(prev => ({ ...prev, [name]: value }));\n};\n\nconst handleSubmit = (e) => {\n  e.preventDefault();\n  alert(\\`Name: \\${formData.name}, Email: \\${formData.email}\\`);\n};`}\n        </pre>\n      </section>\n\n      <section style={{ marginBottom: '20px' }}>\n        <h2>Render the Form</h2>\n        <form onSubmit={handleSubmit} style={{ display: 'flex', flexDirection: 'column', gap: '10px' }}>\n          <input\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Enter your name\"\n            value={formData.name}\n            onChange={handleChange}\n            style={{ padding: '8px', borderRadius: '4px', border: '1px solid #ccc' }}\n          />\n          <input\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Enter your email\"\n            value={formData.email}\n            onChange={handleChange}\n            style={{ padding: '8px', borderRadius: '4px', border: '1px solid #ccc' }}\n          />\n          <button\n            type=\"submit\"\n            style={{ padding: '10px', backgroundColor: '#4A90E2', color: '#fff', border: 'none', borderRadius: '5px', cursor: 'pointer' }}\n          >\n            Submit\n          </button>\n        </form>\n      </section>\n\n      <section style={{ marginTop: '20px' }}>\n        <h2>Key Points</h2>\n        <ul>\n          <li>Controlled components store form input values in state.</li>\n          <li>Form submission is handled by preventing default behavior and using state values.</li>\n          <li>Input changes are tracked via <code>onChange</code> events.</li>\n          <li>Validation can be added inside the submit handler or on change.</li>\n        </ul>\n      </section>\n\n      <section style={{ marginTop: '20px' }}>\n        <h2>Summary</h2>\n        <p>\n          React forms are powerful and flexible. Controlled components ensure the UI reflects the state, \n          making it easy to validate, submit, and manipulate form data.\n        </p>\n      </section>\n    </div>\n  );\n}\n"],"names":["FormsComponent","formData","setFormData","useState","name","email","handleChange","e","value","target","prev","_objectSpread","_jsxs","style","fontFamily","lineHeight","padding","maxWidth","margin","children","_jsx","color","marginBottom","background","borderRadius","onSubmit","preventDefault","alert","concat","display","flexDirection","gap","type","placeholder","onChange","border","backgroundColor","cursor","marginTop"],"sourceRoot":""}