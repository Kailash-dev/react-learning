{"version":3,"file":"static/js/822.2bf5b6e2.chunk.js","mappings":"yJAEe,SAASA,IAGtB,OACEC,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAAEC,WAAY,oBAAqBC,WAAY,MAAOC,QAAS,OAAQC,SAAU,QAASC,OAAQ,QAASC,SAAA,EACrHC,EAAAA,EAAAA,KAAA,MAAIP,MAAO,CAAEQ,MAAO,WAAYF,SAAC,sBAEjCP,EAAAA,EAAAA,MAAA,WAASC,MAAO,CAAES,aAAc,QAASH,SAAA,EACvCC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,+BACJC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,8LAMLP,EAAAA,EAAAA,MAAA,WAASC,MAAO,CAAES,aAAc,QAASH,SAAA,EACvCC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,sBACJC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,0FACHC,EAAAA,EAAAA,KAAA,OAAKP,MAAO,CAAEU,WAAY,UAAWP,QAAS,OAAQQ,aAAc,OAAQL,SAAA,6oBAyB9EP,EAAAA,EAAAA,MAAA,WAASC,MAAO,CAAES,aAAc,QAASH,SAAA,EACvCC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,gBACJP,EAAAA,EAAAA,MAAA,MAAAO,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,0FACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,mDACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,8EACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,6EAIRP,EAAAA,EAAAA,MAAA,WAASC,MAAO,CAAEY,UAAW,QAASN,SAAA,EACpCC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,aACJC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,4LAOX,C","sources":["pages/08-lifting-state-up/LiftingStateUpComponent.tsx"],"sourcesContent":["\n\nexport default function LiftingStateUpComponent() {\n\n\n  return (\n    <div style={{ fontFamily: 'Arial, sans-serif', lineHeight: '1.6', padding: '20px', maxWidth: '800px', margin: 'auto' }}>\n      <h1 style={{ color: '#4A90E2' }}>Lifting State Up</h1>\n\n      <section style={{ marginBottom: '20px' }}>\n        <h2>What is Lifting State Up?</h2>\n        <p>\n          \"Lifting State Up\" is a React pattern where state is moved to the closest common ancestor of components that need it.\n          This allows multiple components to share and synchronize state.\n        </p>\n      </section>\n\n      <section style={{ marginBottom: '20px' }}>\n        <h2>Example Scenario</h2>\n        <p>Two input components need to display the same temperature in Celsius and Fahrenheit:</p>\n        <pre style={{ background: '#f5f5f5', padding: '10px', borderRadius: '5px' }}>\n{`function TemperatureInput({ label, value, onChange }) {\n  return (\n    <div>\n      <label>{label}: </label>\n      <input value={value} onChange={e => onChange(e.target.value)} />\n    </div>\n  );\n}\n\nfunction Calculator() {\n  const [temperature, setTemperature] = useState('');\n\n  const handleTemperatureChange = (value) => setTemperature(value);\n\n  return (\n    <div>\n      <TemperatureInput label=\"Celsius\" value={temperature} onChange={handleTemperatureChange} />\n      <TemperatureInput label=\"Fahrenheit\" value={temperature && (temperature * 9/5 + 32).toFixed(2)} onChange={handleTemperatureChange} />\n    </div>\n  );\n}`}\n        </pre>\n      </section>\n\n      <section style={{ marginBottom: '20px' }}>\n        <h2>Key Points</h2>\n        <ul>\n          <li>State is lifted to the closest common ancestor to share it between child components.</li>\n          <li>Child components receive the state via props.</li>\n          <li>State updates in the parent propagate to all children that depend on it.</li>\n          <li>This pattern avoids duplication of state and ensures consistency.</li>\n        </ul>\n      </section>\n\n      <section style={{ marginTop: '20px' }}>\n        <h2>Summary</h2>\n        <p>\n          Lifting state up is an essential React pattern for sharing data between components.\n          By keeping the source of truth in a parent component, multiple children can stay synchronized.\n        </p>\n      </section>\n    </div>\n  );\n}\n"],"names":["LiftingStateUpComponent","_jsxs","style","fontFamily","lineHeight","padding","maxWidth","margin","children","_jsx","color","marginBottom","background","borderRadius","marginTop"],"sourceRoot":""}