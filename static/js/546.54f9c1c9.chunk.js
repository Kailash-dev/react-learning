"use strict";(self.webpackChunkreact_learning=self.webpackChunkreact_learning||[]).push([[546],{546:(e,r,n)=>{n.r(r),n.d(r,{default:()=>o});var s=n(43),i=n(579);s.Component;function o(){return(0,i.jsxs)("div",{style:{fontFamily:"Arial, sans-serif",lineHeight:"1.6",padding:"20px",maxWidth:"800px",margin:"auto"},children:[(0,i.jsx)("h1",{style:{color:"#4A90E2"},children:"React Error Boundaries"}),(0,i.jsxs)("section",{style:{marginBottom:"20px"},children:[(0,i.jsx)("h2",{children:"What are Error Boundaries?"}),(0,i.jsx)("p",{children:"Error boundaries are React components that catch JavaScript errors anywhere in their child component tree, log those errors, and display a fallback UI instead of crashing the entire app."})]}),(0,i.jsxs)("section",{style:{marginBottom:"20px"},children:[(0,i.jsx)("h2",{children:"Basic Example"}),(0,i.jsx)("p",{children:"Wrapping a component with an error boundary:"}),(0,i.jsx)("pre",{style:{background:"#f5f5f5",padding:"10px",borderRadius:"5px"},children:"<ErrorBoundary>\n  <MyComponent />\n</ErrorBoundary>"}),(0,i.jsxs)("p",{children:["Now, if ",(0,i.jsx)("code",{children:"MyComponent"})," throws an error, the fallback UI is shown instead of crashing the app."]})]}),(0,i.jsxs)("section",{style:{marginBottom:"20px"},children:[(0,i.jsx)("h2",{children:"Key Points"}),(0,i.jsxs)("ul",{children:[(0,i.jsx)("li",{children:"Error boundaries catch errors during rendering, in lifecycle methods, and in constructors of child components."}),(0,i.jsx)("li",{children:"They do NOT catch errors inside event handlers."}),(0,i.jsx)("li",{children:"Defined using class components only (functional components cannot be error boundaries directly)."}),(0,i.jsx)("li",{children:"Always include a fallback UI to display a user-friendly message."})]})]}),(0,i.jsxs)("section",{style:{marginTop:"20px"},children:[(0,i.jsx)("h2",{children:"Summary"}),(0,i.jsx)("p",{children:"Error boundaries improve the robustness of React applications by preventing an entire app from crashing due to errors in specific components. They are essential for handling unexpected errors gracefully."})]})]})}}}]);
//# sourceMappingURL=546.54f9c1c9.chunk.js.map