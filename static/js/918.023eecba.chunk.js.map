{"version":3,"file":"static/js/918.023eecba.chunk.js","mappings":"+JAEe,SAASA,IACxB,OACIC,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAAEC,WAAY,oBAAqBC,WAAY,MAAOC,QAAS,OAAQC,SAAU,QAASC,OAAQ,QAASC,SAAA,EACrHC,EAAAA,EAAAA,KAAA,MAAIP,MAAO,CAAEQ,MAAO,WAAYF,SAAC,0BAEjCP,EAAAA,EAAAA,MAAA,WAASC,MAAO,CAAES,aAAc,QAASH,SAAA,EACvCC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,8BACJP,EAAAA,EAAAA,MAAA,KAAAO,SAAA,CAAG,kBACaC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,aAAe,iJAKvCP,EAAAA,EAAAA,MAAA,WAASC,MAAO,CAAES,aAAc,QAASH,SAAA,EACvCC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,mBACJC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,6CACHC,EAAAA,EAAAA,KAAA,OAAKP,MAAO,CAAEU,WAAY,UAAWP,QAAS,OAAQQ,aAAc,OAAQL,SAAA,qUAoB9EP,EAAAA,EAAAA,MAAA,WAASC,MAAO,CAAES,aAAc,QAASH,SAAA,EACvCC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,gBACJP,EAAAA,EAAAA,MAAA,MAAAO,SAAA,EACEP,EAAAA,EAAAA,MAAA,MAAAO,SAAA,EAAIC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,aAAe,+DACzBC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,mEACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,yFACJP,EAAAA,EAAAA,MAAA,MAAAO,SAAA,CAAI,wBAAoBC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,mBAAqB,uEAIvDP,EAAAA,EAAAA,MAAA,WAASC,MAAO,CAAEY,UAAW,QAASN,SAAA,EACpCC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,aACJP,EAAAA,EAAAA,MAAA,KAAAO,SAAA,CAAG,QACGC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,aAAe,iIAKnC,C","sources":["pages/14-children-props/ChildrenPropsComponent.tsx"],"sourcesContent":["import React from 'react'\n\nexport default function ChildrenPropsComponent() {\nreturn (\n    <div style={{ fontFamily: 'Arial, sans-serif', lineHeight: '1.6', padding: '20px', maxWidth: '800px', margin: 'auto' }}>\n      <h1 style={{ color: '#4A90E2' }}>React Children Props</h1>\n\n      <section style={{ marginBottom: '20px' }}>\n        <h2>What are Children Props?</h2>\n        <p>\n          In React, the <code>children</code> prop allows components to pass nested elements directly into the componentâ€™s output. \n          This makes components flexible and reusable.\n        </p>\n      </section>\n\n      <section style={{ marginBottom: '20px' }}>\n        <h2>Basic Example</h2>\n        <p>Passing JSX as children to a component:</p>\n        <pre style={{ background: '#f5f5f5', padding: '10px', borderRadius: '5px' }}>\n{`function Card({ children }) {\n  return (\n    <div style={{ border: '1px solid #ccc', padding: '10px', borderRadius: '5px' }}>\n      {children}\n    </div>\n  );\n}\n\nfunction App() {\n  return (\n    <Card>\n      <h2>Title inside Card</h2>\n      <p>This content is passed as children.</p>\n    </Card>\n  );\n}`}\n        </pre>\n      </section>\n\n      <section style={{ marginBottom: '20px' }}>\n        <h2>Key Points</h2>\n        <ul>\n          <li><code>children</code> allows components to render nested content dynamically.</li>\n          <li>Children can be JSX elements, text, or even other components.</li>\n          <li>Enables highly reusable and flexible components like wrappers, layouts, and modals.</li>\n          <li>Access children via <code>props.children</code> in class components or directly in functional components.</li>\n        </ul>\n      </section>\n\n      <section style={{ marginTop: '20px' }}>\n        <h2>Summary</h2>\n        <p>\n          The <code>children</code> prop is a core concept in React that enhances component reusability by allowing nested content to be passed directly.\n        </p>\n      </section>\n    </div>\n  );\n}\n"],"names":["ChildrenPropsComponent","_jsxs","style","fontFamily","lineHeight","padding","maxWidth","margin","children","_jsx","color","marginBottom","background","borderRadius","marginTop"],"sourceRoot":""}