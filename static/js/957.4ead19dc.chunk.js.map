{"version":3,"file":"static/js/957.4ead19dc.chunk.js","mappings":"iKAEe,SAASA,KACLC,EAAAA,EAAAA,QAAyB,MAM1C,OACEC,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAAEC,WAAY,oBAAqBC,WAAY,MAAOC,QAAS,OAAQC,SAAU,QAASC,OAAQ,QAASC,SAAA,EACrHC,EAAAA,EAAAA,KAAA,MAAIP,MAAO,CAAEQ,MAAO,WAAYF,SAAC,gBAEjCP,EAAAA,EAAAA,MAAA,WAASC,MAAO,CAAES,aAAc,QAASH,SAAA,EACvCC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,oBACJC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,0KAMLP,EAAAA,EAAAA,MAAA,WAASC,MAAO,CAAES,aAAc,QAASH,SAAA,EACvCC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,mBACJP,EAAAA,EAAAA,MAAA,KAAAO,SAAA,CAAG,UAAMC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,WAAa,gCAC5BC,EAAAA,EAAAA,KAAA,OAAKP,MAAO,CAAEU,WAAY,UAAWP,QAAS,OAAQQ,aAAc,OAAQL,SAAA,sWAoB9EP,EAAAA,EAAAA,MAAA,WAASC,MAAO,CAAES,aAAc,QAASH,SAAA,EACvCC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,gBACJP,EAAAA,EAAAA,MAAA,MAAAO,SAAA,EACEP,EAAAA,EAAAA,MAAA,MAAAO,SAAA,EAAIC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,WAAa,yCAAqCC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,YAAc,iBAChFC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,wEACJP,EAAAA,EAAAA,MAAA,MAAAO,SAAA,CAAI,uEAAmEC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,QAAU,kBACvFC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,+HAIRP,EAAAA,EAAAA,MAAA,WAASC,MAAO,CAAEY,UAAW,QAASN,SAAA,EACpCC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,aACJC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,oJAOX,C","sources":["pages/09-refs/RefsComponent.tsx"],"sourcesContent":["import React, { useRef } from 'react'\n\nexport default function RefsComponent() {\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const focusInput = () => {\n    inputRef.current?.focus();\n  };\n\n  return (\n    <div style={{ fontFamily: 'Arial, sans-serif', lineHeight: '1.6', padding: '20px', maxWidth: '800px', margin: 'auto' }}>\n      <h1 style={{ color: '#4A90E2' }}>React Refs</h1>\n\n      <section style={{ marginBottom: '20px' }}>\n        <h2>What are Refs?</h2>\n        <p>\n          Refs provide a way to access DOM nodes or React elements directly.\n          They are commonly used to manage focus, text selection, or triggering animations imperatively.\n        </p>\n      </section>\n\n      <section style={{ marginBottom: '20px' }}>\n        <h2>Basic Example</h2>\n        <p>Using <code>useRef</code> to focus an input field:</p>\n        <pre style={{ background: '#f5f5f5', padding: '10px', borderRadius: '5px' }}>\n{`import React, { useRef } from 'react';\n\nfunction FocusInput() {\n  const inputRef = useRef(null);\n\n  const focusInput = () => {\n    inputRef.current.focus();\n  };\n\n  return (\n    <div>\n      <input ref={inputRef} type=\"text\" placeholder=\"Type something...\" />\n      <button onClick={focusInput}>Focus Input</button>\n    </div>\n  );\n}`}\n        </pre>\n      </section>\n\n      <section style={{ marginBottom: '20px' }}>\n        <h2>Key Points</h2>\n        <ul>\n          <li><code>useRef</code> returns a mutable ref object with a <code>current</code> property.</li>\n          <li>The ref object persists across renders without causing re-renders.</li>\n          <li>Refs can be attached to DOM elements or React components using the <code>ref</code> attribute.</li>\n          <li>Common use cases: managing focus, reading values, triggering animations, or integrating with third-party libraries.</li>\n        </ul>\n      </section>\n\n      <section style={{ marginTop: '20px' }}>\n        <h2>Summary</h2>\n        <p>\n          Refs provide an escape hatch to access DOM nodes or React elements directly, \n          enabling scenarios that are hard to achieve with state alone.\n        </p>\n      </section>\n    </div>\n  );\n}\n"],"names":["RefsComponent","useRef","_jsxs","style","fontFamily","lineHeight","padding","maxWidth","margin","children","_jsx","color","marginBottom","background","borderRadius","marginTop"],"sourceRoot":""}