"use strict";(self.webpackChunkreact_learning=self.webpackChunkreact_learning||[]).push([[674],{674:(e,t,n)=>{n.r(t),n.d(t,{default:()=>i});var s=n(43),o=n(579);function i(){const[e,t]=(0,s.useState)("light");return(0,o.jsxs)("div",{style:{fontFamily:"Arial, sans-serif",lineHeight:"1.6",padding:"20px",maxWidth:"800px",margin:"auto"},children:[(0,o.jsx)("h1",{style:{color:"#4A90E2"},children:"React Context API"}),(0,o.jsxs)("section",{style:{marginBottom:"20px"},children:[(0,o.jsx)("h2",{children:"What is Context API?"}),(0,o.jsxs)("p",{children:["The ",(0,o.jsx)("strong",{children:"Context API"})," in React allows you to share data between components without passing props manually at every level. It is useful for global state like themes, user data, or settings."]})]}),(0,o.jsxs)("section",{style:{marginBottom:"20px"},children:[(0,o.jsx)("h2",{children:"Basic Example"}),(0,o.jsx)("p",{children:"Creating a simple theme context:"}),(0,o.jsx)("pre",{style:{background:"#f5f5f5",padding:"10px",borderRadius:"5px"},children:"import React, { createContext, useContext, useState } from 'react';\n\nconst ThemeContext = createContext();\n\nfunction ThemeProvider({ children }) {\n  const [theme, setTheme] = useState('light');\n  const toggleTheme = () => setTheme(prev => (prev === 'light' ? 'dark' : 'light'));\n\n  return (\n    <ThemeContext.Provider value={{ theme, toggleTheme }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n}\n\nfunction ThemedButton() {\n  const context = useContext(ThemeContext);\n  return <button onClick={context.toggleTheme}>Current theme: {context.theme}</button>;\n}"})]}),(0,o.jsxs)("section",{style:{marginBottom:"20px"},children:[(0,o.jsx)("h2",{children:"Key Points"}),(0,o.jsxs)("ul",{children:[(0,o.jsxs)("li",{children:["Use ",(0,o.jsx)("code",{children:"createContext"})," to create a context object."]}),(0,o.jsxs)("li",{children:["Wrap the component tree with ",(0,o.jsx)("code",{children:"Context.Provider"})," and pass a value."]}),(0,o.jsxs)("li",{children:["Access context in child components using ",(0,o.jsx)("code",{children:"useContext"}),"."]}),(0,o.jsx)("li",{children:"Useful for sharing global state like theme, language, authentication, etc."})]})]}),(0,o.jsxs)("section",{style:{marginTop:"20px"},children:[(0,o.jsx)("h2",{children:"Summary"}),(0,o.jsxs)("p",{children:["The ",(0,o.jsx)("strong",{children:"Context API"})," provides a way to pass data through the component tree without prop drilling. Combined with hooks, it makes managing global state in functional components straightforward."]})]})]})}}}]);
//# sourceMappingURL=674.cccd8d95.chunk.js.map