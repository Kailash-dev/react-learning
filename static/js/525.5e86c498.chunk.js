"use strict";(self.webpackChunkreact_learning=self.webpackChunkreact_learning||[]).push([[525],{525:(e,n,t)=>{t.r(n),t.d(n,{default:()=>s});var r=t(43),i=t(579);function s(){const[e,n]=(0,r.useState)(0);return(0,i.jsxs)("div",{style:{fontFamily:"Arial, sans-serif",lineHeight:"1.6",padding:"20px",maxWidth:"800px",margin:"auto"},children:[(0,i.jsx)("h1",{style:{color:"#4A90E2"},children:"Testing in React"}),(0,i.jsxs)("section",{style:{marginBottom:"20px"},children:[(0,i.jsx)("h2",{children:"Why Test React Components?"}),(0,i.jsxs)("ul",{children:[(0,i.jsx)("li",{children:"Ensure components work as expected."}),(0,i.jsx)("li",{children:"Catch bugs early in development."}),(0,i.jsx)("li",{children:"Maintain code reliability during refactoring."})]})]}),(0,i.jsxs)("section",{style:{marginBottom:"20px"},children:[(0,i.jsx)("h2",{children:"Basic Example Component"}),(0,i.jsx)("p",{children:"This simple counter component can be tested:"}),(0,i.jsx)("pre",{style:{background:"#f5f5f5",padding:"10px",borderRadius:"5px"},children:"function Counter() {\n  const [count, setCount] = useState(0);\n  return (\n    <>\n      <p>Count: {count}</p>\n      <button onClick={() => setCount(count + 1)}>Increment</button>\n    </>\n  );\n}"}),(0,i.jsxs)("div",{style:{marginTop:"10px"},children:[(0,i.jsx)("p",{children:"Try it out:"}),(0,i.jsxs)("p",{children:["Count: ",e]}),(0,i.jsx)("button",{onClick:()=>n(e+1),children:"Increment"})]})]}),(0,i.jsxs)("section",{style:{marginBottom:"20px"},children:[(0,i.jsx)("h2",{children:"Testing with React Testing Library"}),(0,i.jsx)("pre",{style:{background:"#f5f5f5",padding:"10px",borderRadius:"5px"},children:"import { render, screen, fireEvent } from '@testing-library/react';\nimport Counter from './Counter';\n\ntest('increments counter on button click', () => {\n  render(<Counter />);\n  const button = screen.getByText(/increment/i);\n  fireEvent.click(button);\n  expect(screen.getByText(/count: 1/i)).toBeInTheDocument();\n});"})]}),(0,i.jsxs)("section",{style:{marginTop:"20px"},children:[(0,i.jsx)("h2",{children:"Summary"}),(0,i.jsx)("p",{children:"Testing with Jest and React Testing Library ensures components behave correctly, helps prevent regressions, and boosts confidence during refactoring."})]})]})}}}]);
//# sourceMappingURL=525.5e86c498.chunk.js.map