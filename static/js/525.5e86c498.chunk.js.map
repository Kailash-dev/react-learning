{"version":3,"file":"static/js/525.5e86c498.chunk.js","mappings":"iKAEe,SAASA,IACxB,MAAOC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,GAEjC,OACEC,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAAEC,WAAY,oBAAqBC,WAAY,MAAOC,QAAS,OAAQC,SAAU,QAASC,OAAQ,QAASC,SAAA,EACrHC,EAAAA,EAAAA,KAAA,MAAIP,MAAO,CAAEQ,MAAO,WAAYF,SAAC,sBAEjCP,EAAAA,EAAAA,MAAA,WAASC,MAAO,CAAES,aAAc,QAASH,SAAA,EACvCC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,gCACJP,EAAAA,EAAAA,MAAA,MAAAO,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,yCACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,sCACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,yDAIRP,EAAAA,EAAAA,MAAA,WAASC,MAAO,CAAES,aAAc,QAASH,SAAA,EACvCC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,6BACJC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,kDACHC,EAAAA,EAAAA,KAAA,OAAKP,MAAO,CAAEU,WAAY,UAAWP,QAAS,OAAQQ,aAAc,OAAQL,SAAA,6MAY5EP,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAAEY,UAAW,QAASN,SAAA,EAChCC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,iBACHP,EAAAA,EAAAA,MAAA,KAAAO,SAAA,CAAG,UAAQV,MACXW,EAAAA,EAAAA,KAAA,UAAQM,QAASA,IAAMhB,EAASD,EAAQ,GAAGU,SAAC,qBAIhDP,EAAAA,EAAAA,MAAA,WAASC,MAAO,CAAES,aAAc,QAASH,SAAA,EACvCC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,wCACJC,EAAAA,EAAAA,KAAA,OAAKP,MAAO,CAAEU,WAAY,UAAWP,QAAS,OAAQQ,aAAc,OAAQL,SAAA,6UAa9EP,EAAAA,EAAAA,MAAA,WAASC,MAAO,CAAEY,UAAW,QAASN,SAAA,EACpCC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,aACJC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,+JAMX,C","sources":["pages/18-testing/TestingComponent.tsx"],"sourcesContent":["import React, { useState } from 'react'\n\nexport default function TestingComponent() {\nconst [count, setCount] = useState(0);\n\n  return (\n    <div style={{ fontFamily: 'Arial, sans-serif', lineHeight: '1.6', padding: '20px', maxWidth: '800px', margin: 'auto' }}>\n      <h1 style={{ color: '#4A90E2' }}>Testing in React</h1>\n\n      <section style={{ marginBottom: '20px' }}>\n        <h2>Why Test React Components?</h2>\n        <ul>\n          <li>Ensure components work as expected.</li>\n          <li>Catch bugs early in development.</li>\n          <li>Maintain code reliability during refactoring.</li>\n        </ul>\n      </section>\n\n      <section style={{ marginBottom: '20px' }}>\n        <h2>Basic Example Component</h2>\n        <p>This simple counter component can be tested:</p>\n        <pre style={{ background: '#f5f5f5', padding: '10px', borderRadius: '5px' }}>\n{`function Counter() {\n  const [count, setCount] = useState(0);\n  return (\n    <>\n      <p>Count: {count}</p>\n      <button onClick={() => setCount(count + 1)}>Increment</button>\n    </>\n  );\n}`}\n        </pre>\n\n        <div style={{ marginTop: '10px' }}>\n          <p>Try it out:</p>\n          <p>Count: {count}</p>\n          <button onClick={() => setCount(count + 1)}>Increment</button>\n        </div>\n      </section>\n\n      <section style={{ marginBottom: '20px' }}>\n        <h2>Testing with React Testing Library</h2>\n        <pre style={{ background: '#f5f5f5', padding: '10px', borderRadius: '5px' }}>\n{`import { render, screen, fireEvent } from '@testing-library/react';\nimport Counter from './Counter';\n\ntest('increments counter on button click', () => {\n  render(<Counter />);\n  const button = screen.getByText(/increment/i);\n  fireEvent.click(button);\n  expect(screen.getByText(/count: 1/i)).toBeInTheDocument();\n});`}\n        </pre>\n      </section>\n\n      <section style={{ marginTop: '20px' }}>\n        <h2>Summary</h2>\n        <p>\n          Testing with Jest and React Testing Library ensures components behave correctly, helps prevent regressions, and boosts confidence during refactoring.\n        </p>\n      </section>\n    </div>\n  );\n}\n"],"names":["TestingComponent","count","setCount","useState","_jsxs","style","fontFamily","lineHeight","padding","maxWidth","margin","children","_jsx","color","marginBottom","background","borderRadius","marginTop","onClick"],"sourceRoot":""}